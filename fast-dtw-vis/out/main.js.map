{"version":3,"sources":["src/app/main.ts","src/app/window.ts"],"names":[],"mappings":"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","file":"","sourcesContent":["import { app } from \"electron\"\r\nimport { createMainWindow } from \"./window\"\r\nimport * as log from \"electron-log\"\r\n\r\nlog.transports.file.level = false\r\nlog.transports.console.level = \"debug\"\r\n\r\nlet window: Electron.BrowserWindow\r\n\r\nconst appPath = app.getAppPath()\r\n\r\napp.on(\"ready\", () => {\r\n  window = createMainWindow(appPath)\r\n})\r\n\r\napp.on(\"window-all-closed\", app.quit)\r\n","import { joinFuseBoxPath } from \"fuse-box/Utils\"\r\nimport { format } from \"url\"\r\n\r\nconst { app, BrowserWindow } = require(\"electron\")\r\nconst WindowStateManager = require(\"electron-window-state-manager\")\r\n\r\nexport const DIMENSIONS = {\r\n  width: 800,\r\n  height: 600,\r\n  minWidth: 640,\r\n  minHeight: 480,\r\n}\r\n\r\nfunction loadURL(window: Electron.BrowserWindow, appPath: string) {\r\n  window.loadURL(\r\n    format({\r\n      pathname: joinFuseBoxPath(appPath, \"out/index.html\"),\r\n      protocol: \"file\",\r\n      slashes: true,\r\n    })\r\n  )\r\n}\r\n\r\nexport function createMainWindow(appPath: string, showDelay: number = 100) {\r\n  const windowState = new WindowStateManager(\"main\", {\r\n    defaultWidth: DIMENSIONS.width,\r\n    defaultHeight: DIMENSIONS.height,\r\n  })\r\n\r\n  const window = new BrowserWindow({\r\n    minWidth: DIMENSIONS.minWidth,\r\n    minHeight: DIMENSIONS.minHeight,\r\n    width: windowState.width,\r\n    height: windowState.height,\r\n    x: windowState.x,\r\n    y: windowState.y,\r\n    resizable: true,\r\n    maximizable: true,\r\n    frame: true,\r\n    show: false,\r\n    useContentSize: false,\r\n    titleBarStyle: \"hiddenInset\",\r\n    autoHideMenuBar: false,\r\n    // backgroundColor: '#fff',\r\n    vibrancy: \"light\",\r\n    transparent: false,\r\n    title: app.getName(),\r\n    webPreferences: {\r\n      enableRemoteModule: true,\r\n      nodeIntegration: true,\r\n      backgroundThrottling: false,\r\n      textAreasAreResizable: false,\r\n    },\r\n  })\r\n\r\n  if (windowState.maximized) {\r\n    window.maximize()\r\n  }\r\n\r\n  window.on(\"close\", () => windowState.saveState(window))\r\n  window.on(\"move\", () => windowState.saveState(window))\r\n  window.on(\"resize\", () => windowState.saveState(window))\r\n\r\n  loadURL(window, appPath)\r\n\r\n  // only appear once we've loaded\r\n  window.webContents.on(\"did-finish-load\", () => {\r\n    setTimeout(() => {\r\n      window.show()\r\n      window.focus()\r\n    }, showDelay)\r\n  })\r\n\r\n  return window\r\n}\r\n"]}